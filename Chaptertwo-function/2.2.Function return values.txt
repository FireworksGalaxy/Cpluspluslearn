- The return value from main is sometimes called a status code (also sometimes called an exit code, or rarely a return code), as it is used to indicate whether the program ran successfully or not
By definition, a status code of 0 means the program executed successfully.

- The C++ standard only defines the meaning of 3 status codes: 0, EXIT_SUCCESS, and EXIT_FAILURE.
- 0 and EXIT_SUCCESS both mean the program executed successfully. 
  \bold{EXIT_FAILURE} means the program did not execute successfully.

EXIT_SUCCESS and EXIT_FAILURE are preprocessor macros defined in the <cstdlib> header:

%% Function 1
#include <cstdlib> // for EXIT_SUCCESS and EXIT_FAILURE
int main()
{
    return EXIT_SUCCESS;
}
If you want to maximize portability, you should only use 0 or EXIT_SUCCESS to indicate a successful termination, or EXIT_FAILURE to indicate an unsuccessful termination.


%% Function 2
#include <iostream>

int getValueFromUser() // this function now returns an integer value
{
 	std::cout << "Enter an integer: ";
	int input{};
	std::cin >> input;

	return input; // return the value the user entered back to the caller
}

int main()
{
	int num { getValueFromUser() }; // initialize num with the return value of getValueFromUser()

	std::cout << num << " doubled is: " << num * 2 << '\n';

	return 0;
}


%%
int getNumbers()
{
    return 5;
    return 7;
}

It should be noted that the function exit from first return! It doesn't read the return 7!



